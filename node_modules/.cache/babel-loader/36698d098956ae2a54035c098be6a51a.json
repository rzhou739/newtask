{"ast":null,"code":"var _jsxFileName = \"/Users/ruizhou/Desktop/navtask/src/components/CardEditor.js\";\nimport \"../styles/CardEditor.css\";\nimport React, { Component } from \"react\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport EditButtons from \"./EditButtons\";\nimport { Redirect } from \"react-router-dom\";\nimport { PropsTypes } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CardEditor extends Component {\n  /*constructor(props){\n    super(props);\n  }*/\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: this.props.text || \"\",\n      btn: \"\"\n    };\n\n    this.handleChangeText = event => this.setState({\n      text: event.target.value\n    });\n\n    this.onEnter = e => {\n      const text = this.state.text;\n\n      if (e.keyCode === 13) {\n        e.preventDefault();\n        this.props.onSave(text);\n      }\n    };\n\n    this.color = Event => {\n      this.setState({\n        btn: Event.target.value\n      });\n      localStorage.setItem('buttonColor', Event.target.value);\n    };\n\n    this.color = Event => {\n      //Event.persist();\n      this.setState({\n        btn: Event.target.value\n      });\n      this.props.onColor(Event.target.value); //this.props.onColor({payload:  Event.target.value})\n    };\n\n    this.state = {\n      btn: \"\"\n    };\n  }\n\n  componentDidMount() {\n    const color = localStorage.getItem('buttonColor');\n\n    if (color != undefined) {\n      this.setState({\n        btn: color\n      });\n    }\n  }\n\n  render() {\n    const _this$state = this.state,\n          text = _this$state.text,\n          btn = _this$state.btn;\n    const _this$props = this.props,\n          onSave = _this$props.onSave,\n          onCancel = _this$props.onCancel,\n          onDelete = _this$props.onDelete;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Edit-Card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Button\",\n        Button: \"onClick\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Card\",\n        children: /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n          autoFocus: true,\n          className: \"Edit-Card-Textarea\",\n          placeholder: \"Enter the text for this card...\",\n          value: text,\n          onChange: this.handleChangeText,\n          onKeyDown: this.onEnter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditButtons, {\n        handleSave: () => onSave(text) //saveLabel={adding ? \"Add card\" : \"Save\"}\n        ,\n        handleDelete: onDelete,\n        handleCancel: onCancel,\n        handleColor: this.color,\n        red: btn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CardEditor;","map":{"version":3,"sources":["/Users/ruizhou/Desktop/navtask/src/components/CardEditor.js"],"names":["React","Component","TextareaAutosize","EditButtons","Redirect","PropsTypes","CardEditor","constructor","props","state","text","btn","handleChangeText","event","setState","target","value","onEnter","e","keyCode","preventDefault","onSave","color","Event","localStorage","setItem","onColor","componentDidMount","getItem","undefined","render","onCancel","onDelete"],"mappings":"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","sourcesContent":["import \"../styles/CardEditor.css\";\nimport React, { Component } from \"react\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport EditButtons from \"./EditButtons\";\nimport { Redirect } from \"react-router-dom\";\nimport { PropsTypes } from 'react'\n\nclass CardEditor extends Component {\n \n  state = {\n    text: this.props.text || \"\",\n    btn: \"\"\n  };\n  handleChangeText = event => this.setState({ text: event.target.value });\n\n  onEnter = e => {\n    const { text } = this.state;\n    \n    if (e.keyCode === 13) {\n      e.preventDefault();\n      this.props.onSave(text);\n    }\n  };\n  /*constructor(props){\n    super(props);\n}*/\n\nconstructor(props) {\n  super(props);\n  this.state = {\n    btn:\"\" \n  }\n}\n\ncomponentDidMount(){\n    const color = localStorage.getItem('buttonColor')\n    if(color != undefined){\n        this.setState({btn: color})\n    }\n}\n\ncolor = (Event) => {\n     this.setState({btn: Event.target.value});\n     localStorage.setItem('buttonColor', Event.target.value);\n\n}\n \n//create color function\n  color=(Event) => {\n    //Event.persist();\n    this.setState({btn:Event.target.value});\n    this.props.onColor(Event.target.value);\n    //this.props.onColor({payload:  Event.target.value})\n  };\n  \n  render() {\n    const { text,btn } = this.state;\n    const { onSave, onCancel, onDelete} = this.props;\n    \n    \n    return (\n      \n      <div className=\"Edit-Card\">\n        <div\n        className = \"Button\"\n        Button=\"onClick\"\n        >\n        </div>\n        \n        <div className=\"Card\">\n          <TextareaAutosize\n            autoFocus\n            className=\"Edit-Card-Textarea\"\n            placeholder=\"Enter the text for this card...\"\n            value={text}\n            onChange={this.handleChangeText}\n            onKeyDown={this.onEnter}\n          />\n          \n        </div>\n        <EditButtons\n          handleSave={() => onSave(text)}\n          //saveLabel={adding ? \"Add card\" : \"Save\"}\n          handleDelete={onDelete}\n          handleCancel={onCancel}\n          handleColor={this.color}\n\n          red={btn}\n        />\n      </div>\n      \n    );\n  }\n}\n\nexport default CardEditor;\n"]},"metadata":{},"sourceType":"module"}