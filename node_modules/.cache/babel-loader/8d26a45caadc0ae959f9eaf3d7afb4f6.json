{"ast":null,"code":"import _objectSpread from \"/Users/ruizhou/Desktop/navtask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/Users/ruizhou/Desktop/navtask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ruizhou/Desktop/navtask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/ruizhou/Desktop/navtask/src/components/List.js\";\nimport \"../styles/List.css\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\nimport Card from \"./Card\";\nimport CardEditor from \"./CardEditor\";\nimport ListEditor from \"./ListEditor\";\nimport shortid from \"shortid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass List extends Component {\n  constructor(...args) {\n    var _this;\n\n    super(...args);\n    _this = this;\n    this.state = {\n      editingTitle: false,\n      title: this.props.list.title,\n      addingCard: false\n    };\n\n    this.toggleAddingCard = () => this.setState({\n      addingCard: !this.state.addingCard\n    });\n\n    this.addCard = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(cardText) {\n        var _this$props, listId, dispatch, cardId;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this$props = _this.props, listId = _this$props.listId, dispatch = _this$props.dispatch;\n\n              _this.toggleAddingCard();\n\n              cardId = shortid.generate();\n              dispatch({\n                type: \"ADD_CARD\",\n                payload: {\n                  cardText,\n                  cardId,\n                  listId\n                }\n              });\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.toggleEditingTitle = () => this.setState({\n      editingTitle: !this.state.editingTitle\n    });\n\n    this.handleChangeTitle = e => this.setState({\n      title: e.target.value\n    });\n\n    this.editListTitle = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _this$props2, listId, dispatch, title;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _this$props2 = _this.props, listId = _this$props2.listId, dispatch = _this$props2.dispatch;\n            title = _this.state.title;\n\n            _this.toggleEditingTitle();\n\n            dispatch({\n              type: \"CHANGE_LIST_TITLE\",\n              payload: {\n                listId,\n                listTitle: title\n              }\n            });\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n    this.deleteList = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n      var _this$props3, listId, list, dispatch;\n\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) switch (_context3.prev = _context3.next) {\n          case 0:\n            _this$props3 = _this.props, listId = _this$props3.listId, list = _this$props3.list, dispatch = _this$props3.dispatch;\n            dispatch({\n              type: \"DELETE_LIST\",\n              payload: {\n                listId,\n                cards: list.cards\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context3.stop();\n        }\n      }, _callee3);\n    }));\n  }\n\n  render() {\n    const _this$props4 = this.props,\n          list = _this$props4.list,\n          index = _this$props4.index;\n    const _this$state = this.state,\n          editingTitle = _this$state.editingTitle,\n          addingCard = _this$state.addingCard,\n          title = _this$state.title;\n    return /*#__PURE__*/_jsxDEV(Draggable, {\n      draggableId: list._id,\n      index: index,\n      children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread(_objectSpread({\n        ref: provided.innerRef\n      }, provided.draggableProps), provided.dragHandleProps), {}, {\n        className: \"List\",\n        children: [editingTitle ? /*#__PURE__*/_jsxDEV(ListEditor, {\n          list: list,\n          title: title,\n          handleChangeTitle: this.handleChangeTitle,\n          saveList: this.editListTitle,\n          onClickOutside: this.editListTitle,\n          deleteList: this.deleteList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"List-Title\",\n          onClick: this.toggleEditingTitle,\n          children: list.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: list._id,\n          children: (provided, _snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            children: [list.cards && list.cards.map((cardId, index) => /*#__PURE__*/_jsxDEV(Card, {\n              cardId: cardId,\n              index: index,\n              listId: list._id\n            }, cardId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 23\n            }, this)), provided.placeholder]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), addingCard ? /*#__PURE__*/_jsxDEV(CardEditor, {\n          onSave: this.addCard,\n          onCancel: this.toggleAddingCard,\n          adding: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Toggle-Add-Card\",\n          onClick: this.toggleAddingCard,\n          children: [/*#__PURE__*/_jsxDEV(\"ion-icon\", {\n            name: \"add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this), \" Add a card\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this)]\n      }), void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  list: state.listsById[ownProps.listId]\n});\n\nexport default connect(mapStateToProps)(List);","map":{"version":3,"sources":["/Users/ruizhou/Desktop/navtask/src/components/List.js"],"names":["React","Component","connect","Droppable","Draggable","Card","CardEditor","ListEditor","shortid","List","state","editingTitle","title","props","list","addingCard","toggleAddingCard","setState","addCard","cardText","listId","dispatch","cardId","generate","type","payload","toggleEditingTitle","handleChangeTitle","e","target","value","editListTitle","listTitle","deleteList","cards","render","index","_id","provided","snapshot","innerRef","draggableProps","dragHandleProps","_snapshot","map","placeholder","mapStateToProps","ownProps","listsById"],"mappings":"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","sourcesContent":["import \"../styles/List.css\";\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Droppable, Draggable } from \"react-beautiful-dnd\";\n\nimport Card from \"./Card\";\nimport CardEditor from \"./CardEditor\";\nimport ListEditor from \"./ListEditor\";\n\nimport shortid from \"shortid\";\n\nclass List extends Component {\n  state = {\n    editingTitle: false,\n    title: this.props.list.title,\n    addingCard: false\n  };\n\n  toggleAddingCard = () =>\n    this.setState({ addingCard: !this.state.addingCard });\n\n  addCard = async cardText => {\n    const { listId, dispatch } = this.props;\n\n    this.toggleAddingCard();\n\n    const cardId = shortid.generate();\n\n    dispatch({\n      type: \"ADD_CARD\",\n      payload: { cardText, cardId, listId }\n    });\n  };\n\n  toggleEditingTitle = () =>\n    this.setState({ editingTitle: !this.state.editingTitle });\n\n  handleChangeTitle = e => this.setState({ title: e.target.value });\n\n  editListTitle = async () => {\n    const { listId, dispatch } = this.props;\n    const { title } = this.state;\n\n    this.toggleEditingTitle();\n\n    dispatch({\n      type: \"CHANGE_LIST_TITLE\",\n      payload: { listId, listTitle: title }\n    });\n  };\n\n  deleteList = async () => {\n    const { listId, list, dispatch } = this.props;\n\n    dispatch({\n      type: \"DELETE_LIST\",\n      payload: { listId, cards: list.cards }\n    });\n  };\n\n  render() {\n    const { list, index } = this.props;\n    const { editingTitle, addingCard, title } = this.state;\n\n    return (\n      <Draggable draggableId={list._id} index={index}>\n        {(provided, snapshot) => (\n          <div\n            ref={provided.innerRef}\n            {...provided.draggableProps}\n            {...provided.dragHandleProps}\n            className=\"List\"\n          >\n            {editingTitle ? (\n              <ListEditor\n                list={list}\n                title={title}\n                handleChangeTitle={this.handleChangeTitle}\n                saveList={this.editListTitle}\n                onClickOutside={this.editListTitle}\n                deleteList={this.deleteList}\n              />\n            ) : (\n              <div className=\"List-Title\" onClick={this.toggleEditingTitle}>\n                {list.title}\n              </div>\n            )}\n\n            <Droppable droppableId={list._id}>\n              {(provided, _snapshot) => (\n                <div ref={provided.innerRef}>\n                  {list.cards &&\n                    list.cards.map((cardId, index) => (\n                      <Card\n                        key={cardId}\n                        cardId={cardId}\n                        index={index}\n                        listId={list._id}\n                      />\n                    ))}\n\n                  {provided.placeholder}\n                </div>\n              )}\n            </Droppable>\n\n            {addingCard ? (\n              <CardEditor\n                onSave={this.addCard}\n                onCancel={this.toggleAddingCard}\n                adding\n              />\n            ) : (\n              <div className=\"Toggle-Add-Card\" onClick={this.toggleAddingCard}>\n                <ion-icon name=\"add\" /> Add a card\n              </div>\n            )}\n          </div>\n        )}\n      </Draggable>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  list: state.listsById[ownProps.listId]\n});\n\nexport default connect(mapStateToProps)(List);\n"]},"metadata":{},"sourceType":"module"}