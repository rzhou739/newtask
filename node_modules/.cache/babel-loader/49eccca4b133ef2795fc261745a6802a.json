{"ast":null,"code":"var _jsxFileName = \"/Users/ruizhou/Desktop/navtask/src/components/CardEditor.js\";\nimport \"../styles/CardEditor.css\";\nimport React, { Component } from \"react\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport EditButtons from \"./EditButtons\";\nimport { onColor } from \"./Card\"; //import { Redirect } from \"react-router-dom\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CardEditor extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      text: this.props.text || \"\",\n      btn: \"\" //btn:JSON.parse(localStorage.getItem('allProjects')) || []\n\n    };\n\n    this.handleChangeText = event => this.setState({\n      text: event.target.value\n    });\n\n    this.onEnter = e => {\n      const text = this.state.text;\n\n      if (e.keyCode === 13) {\n        e.preventDefault();\n        this.props.onSave(text);\n      }\n    };\n\n    this.color = Event => {\n      // Event.preventDefault();\n      this.props.onColor(Event.target.value);\n      Event.preventDefault(); //onColor(this.setState);\n      //this.onColor.bind(this)\n\n      this.setState({\n        btn: Event.target.value\n      }); //this.props.onColor(Event.target.value);\n      //localStorage.setItem('buttonColor', Event.target.value);\n\n      /*this.setState({\n          btn: this.state.btn.concat(Event.target.value)\n      },() => {\n        localStorage.setItem('buttonColor', JSON.stringify(this.state.btn))\n        })*/\n    };\n  }\n\n  /*constructor(props) {\n    super(props);\n    this.color = this.color.bind(this);\n  }*/\n  render() {\n    const _this$state = this.state,\n          text = _this$state.text,\n          btn = _this$state.btn;\n    const _this$props = this.props,\n          onSave = _this$props.onSave,\n          onCancel = _this$props.onCancel,\n          onDelete = _this$props.onDelete,\n          adding = _this$props.adding;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Edit-Card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Button\",\n        Button: \"onClick\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Card\",\n        children: /*#__PURE__*/_jsxDEV(TextareaAutosize, {\n          autoFocus: true,\n          className: \"Edit-Card-Textarea\",\n          placeholder: \"Enter the text for this card...\",\n          value: text,\n          onChange: this.handleChangeText,\n          onKeyDown: this.onEnter\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(EditButtons, {\n        handleSave: () => onSave(text) //saveLabel={adding ? \"Add card\" : \"Save\"}\n        ,\n        handleDelete: onDelete,\n        handleCancel: onCancel,\n        handleColor: this.color,\n        red: btn\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CardEditor;","map":{"version":3,"sources":["/Users/ruizhou/Desktop/navtask/src/components/CardEditor.js"],"names":["React","Component","TextareaAutosize","EditButtons","onColor","CardEditor","state","text","props","btn","handleChangeText","event","setState","target","value","onEnter","e","keyCode","preventDefault","onSave","color","Event","render","onCancel","onDelete","adding"],"mappings":";AAAA,OAAO,0BAAP;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAAQC,OAAR,QAAsB,QAAtB,C,CAEA;;;;AAEA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAEjCK,KAFiC,GAEzB;AACNC,MAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWD,IAAX,IAAmB,EADnB;AAENE,MAAAA,GAAG,EAAE,EAFC,CAGN;;AAHM,KAFyB;;AAAA,SAQjCC,gBARiC,GAQdC,KAAK,IAAI,KAAKC,QAAL,CAAc;AAAEL,MAAAA,IAAI,EAAEI,KAAK,CAACE,MAAN,CAAaC;AAArB,KAAd,CARK;;AAAA,SAUjCC,OAViC,GAUvBC,CAAC,IAAI;AAAA,YACLT,IADK,GACI,KAAKD,KADT,CACLC,IADK;;AAGb,UAAIS,CAAC,CAACC,OAAF,KAAc,EAAlB,EAAsB;AACpBD,QAAAA,CAAC,CAACE,cAAF;AACA,aAAKV,KAAL,CAAWW,MAAX,CAAkBZ,IAAlB;AACD;AACF,KAjBgC;;AAAA,SAqCjCa,KArCiC,GAqC1BC,KAAD,IAAW;AAChB;AAEC,WAAKb,KAAL,CAAWJ,OAAX,CAAmBiB,KAAK,CAACR,MAAN,CAAaC,KAAhC;AACAO,MAAAA,KAAK,CAACH,cAAN,GAJe,CAKf;AACA;;AACA,WAAKN,QAAL,CAAc;AAACH,QAAAA,GAAG,EAACY,KAAK,CAACR,MAAN,CAAaC;AAAlB,OAAd,EAPe,CAQf;AAEA;;AACF;AACF;AACA;AACA;AACA;AACG,KArDgC;AAAA;;AAsDjC;AACF;AACA;AACA;AAGEQ,EAAAA,MAAM,GAAG;AAAA,wBACc,KAAKhB,KADnB;AAAA,UACCC,IADD,eACCA,IADD;AAAA,UACME,GADN,eACMA,GADN;AAAA,wBAEuC,KAAKD,KAF5C;AAAA,UAECW,MAFD,eAECA,MAFD;AAAA,UAESI,QAFT,eAESA,QAFT;AAAA,UAEmBC,QAFnB,eAEmBA,QAFnB;AAAA,UAE6BC,MAF7B,eAE6BA,MAF7B;AAKP,wBACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AACA,QAAA,SAAS,EAAG,QADZ;AAEA,QAAA,MAAM,EAAC;AAFP;AAAA;AAAA;AAAA;AAAA,cADF,eAOE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,+BACE,QAAC,gBAAD;AACE,UAAA,SAAS,MADX;AAEE,UAAA,SAAS,EAAC,oBAFZ;AAGE,UAAA,WAAW,EAAC,iCAHd;AAIE,UAAA,KAAK,EAAElB,IAJT;AAKE,UAAA,QAAQ,EAAE,KAAKG,gBALjB;AAME,UAAA,SAAS,EAAE,KAAKK;AANlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF,eAmBE,QAAC,WAAD;AACE,QAAA,UAAU,EAAE,MAAMI,MAAM,CAACZ,IAAD,CAD1B,CAEE;AAFF;AAIE,QAAA,YAAY,EAAEiB,QAJhB;AAKE,QAAA,YAAY,EAAED,QALhB;AAME,QAAA,WAAW,EAAE,KAAKH,KANpB;AAOE,QAAA,GAAG,EAAEX;AAPP;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkCD;;AAnGgC;;AAsGnC,eAAeJ,UAAf","sourcesContent":["import \"../styles/CardEditor.css\";\nimport React, { Component } from \"react\";\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport EditButtons from \"./EditButtons\";\nimport {onColor} from \"./Card\";\n\n//import { Redirect } from \"react-router-dom\";\n\nclass CardEditor extends Component {\n \n  state = {\n    text: this.props.text || \"\",\n    btn: \"\"\n    //btn:JSON.parse(localStorage.getItem('allProjects')) || []\n    \n  };\n  handleChangeText = event => this.setState({ text: event.target.value });\n\n  onEnter = e => {\n    const { text } = this.state;\n    \n    if (e.keyCode === 13) {\n      e.preventDefault();\n      this.props.onSave(text);\n    }\n  };\n  /*componentDidMount(){\n   const color = localStorage.getItem('buttonColor')\n    if(color != undefined){\n        this.setState({btn: color})\n  }\n}*/\n//create the props function\n/*constructor(props){\n  super(props);\n  this.state ={\n    onColor:props.Event\n  }\n}*/\n\n/*constructor() {\n  super();\n  this.onColor = this.onColor.bind(this);\n}*/\n//create color function\n  color=(Event) => {\n   // Event.preventDefault();\n\n    this.props.onColor(Event.target.value);\n    Event.preventDefault();\n    //onColor(this.setState);\n    //this.onColor.bind(this)\n    this.setState({btn:Event.target.value});\n    //this.props.onColor(Event.target.value);\n\n    //localStorage.setItem('buttonColor', Event.target.value);\n  /*this.setState({\n      btn: this.state.btn.concat(Event.target.value)\n  },() => {\n    localStorage.setItem('buttonColor', JSON.stringify(this.state.btn))\n    })*/\n  };\n  /*constructor(props) {\n    super(props);\n    this.color = this.color.bind(this);\n  }*/\n  \n\n  render() {\n    const { text,btn } = this.state;\n    const { onSave, onCancel, onDelete, adding} = this.props;\n    \n   \n    return (\n      <div className=\"Edit-Card\">\n        <div\n        className = \"Button\"\n        Button=\"onClick\"\n        >\n        </div>\n        \n        <div className=\"Card\">\n          <TextareaAutosize\n            autoFocus\n            className=\"Edit-Card-Textarea\"\n            placeholder=\"Enter the text for this card...\"\n            value={text}\n            onChange={this.handleChangeText}\n            onKeyDown={this.onEnter}\n          \n          />\n          \n        </div>\n        <EditButtons\n          handleSave={() => onSave(text)}\n          //saveLabel={adding ? \"Add card\" : \"Save\"}\n         \n          handleDelete={onDelete}\n          handleCancel={onCancel}\n          handleColor={this.color}\n          red={btn}\n        />\n      </div>\n      \n    );\n   \n    \n  }\n}\n\nexport default CardEditor;\n"]},"metadata":{},"sourceType":"module"}