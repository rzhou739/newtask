{"ast":null,"code":"import _objectSpread from \"/Users/ruizhou/Desktop/navtask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"/Users/ruizhou/Desktop/navtask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/ruizhou/Desktop/navtask/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"/Users/ruizhou/Desktop/navtask/src/components/Card.js\";\nimport \"../styles/Card.css\";\nimport { PropTypes } from 'react';\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport CardEditor from \"./CardEditor\";\nimport EditButtons from \"./EditButtons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Card extends Component {\n  //store the color\n  constructor(props) {\n    var _this;\n\n    super(props);\n    _this = this;\n    this.state = {\n      hover: false,\n      editing: false,\n      btn: \"\"\n    };\n\n    this.startHover = () => this.setState({\n      hover: true\n    });\n\n    this.endHover = () => this.setState({\n      hover: false\n    });\n\n    this.startEditing = () => this.setState({\n      hover: false,\n      editing: true //text: this.props.card.text,\n\n    });\n\n    this.endEditing = () => this.setState({\n      hover: false,\n      editing: false\n    });\n\n    this.editCard = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(text) {\n        var _this$props, card, dispatch;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _this$props = _this.props, card = _this$props.card, dispatch = _this$props.dispatch;\n\n              _this.endEditing();\n\n              dispatch({\n                type: \"CHANGE_CARD_TEXT\",\n                payload: {\n                  cardId: card._id,\n                  cardText: text\n                }\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    this.deleteCard = /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var _this$props2, listId, card, dispatch;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _this$props2 = _this.props, listId = _this$props2.listId, card = _this$props2.card, dispatch = _this$props2.dispatch;\n            dispatch({\n              type: \"DELETE_CARD\",\n              payload: {\n                cardId: card._id,\n                listId\n              }\n            });\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2);\n    }));\n\n    this.changeColor = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(Event) {\n        var _this$props3, card, dispatch;\n\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) switch (_context3.prev = _context3.next) {\n            case 0:\n              _this.setState({\n                btn: Event\n              });\n\n              _this$props3 = _this.props, card = _this$props3.card, dispatch = _this$props3.dispatch;\n              dispatch({\n                type: \"CHANGE_CARD_COLOR\",\n                payload: {\n                  cardId: card._id,\n                  color: Event\n                }\n              });\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }, _callee3);\n      }));\n\n      return function (_x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    this.state = {\n      btn: ''\n    };\n  } //change color function \n\n\n  render() {\n    const _this$props4 = this.props,\n          card = _this$props4.card,\n          index = _this$props4.index;\n    const _this$state = this.state,\n          hover = _this$state.hover,\n          editing = _this$state.editing,\n          btn = _this$state.btn;\n\n    if (!editing) {\n      return /*#__PURE__*/_jsxDEV(Draggable, {\n        draggableId: card._id,\n        index: index,\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread(_objectSpread({\n          ref: provided.innerRef\n        }, provided.draggableProps), provided.dragHandleProps), {}, {\n          className: \"Card\",\n          onMouseEnter: this.startHover,\n          onMouseLeave: this.endHover,\n          style: {\n            border: \"2px solid \".concat(btn)\n          } //style ={this.btn()}\n          ,\n          children: [hover && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"Card-Icons\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"Card-Icon\",\n              onClick: this.startEditing,\n              children: /*#__PURE__*/_jsxDEV(\"ion-icon\", {\n                name: \"create\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, this), this.changeColor, card.text]\n        }), void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this);\n    } else {\n      return (\n        /*#__PURE__*/\n        //Card Eidtor\n        _jsxDEV(CardEditor, {\n          text: card.text,\n          onSave: this.editCard,\n          onDelete: this.deleteCard,\n          onCancel: this.endEditing //onColor\n          ,\n          onColor: this.changeColor\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 9\n        }, this)\n      );\n    }\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  card: state.cardsById[ownProps.cardId]\n});\n\nexport default connect(mapStateToProps)(Card);","map":{"version":3,"sources":["/Users/ruizhou/Desktop/navtask/src/components/Card.js"],"names":["PropTypes","React","Component","connect","Draggable","CardEditor","EditButtons","Card","constructor","props","state","hover","editing","btn","startHover","setState","endHover","startEditing","endEditing","editCard","text","card","dispatch","type","payload","cardId","_id","cardText","deleteCard","listId","changeColor","Event","color","render","index","provided","innerRef","draggableProps","dragHandleProps","border","mapStateToProps","ownProps","cardsById"],"mappings":"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","sourcesContent":["import \"../styles/Card.css\";\nimport { PropTypes } from 'react'\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Draggable } from \"react-beautiful-dnd\";\nimport CardEditor from \"./CardEditor\";\nimport EditButtons from \"./EditButtons\";\n\n\nclass Card extends Component {\n  state = {\n    hover: false,\n    editing: false,\n    btn:\"\"\n  };\n  startHover = () => this.setState({ hover: true });\n  endHover = () => this.setState({ hover: false });\n\n  startEditing = () =>\n    this.setState({\n      hover: false,\n      editing: true,\n      //text: this.props.card.text,\n    });\n\n  endEditing = () => this.setState({ hover: false, editing: false });\n\n  editCard = async text => {\n    const { card, dispatch } = this.props;\n\n    this.endEditing();\n\n    dispatch({\n      type: \"CHANGE_CARD_TEXT\",\n      payload: { cardId: card._id, cardText: text }\n    });\n  };\n\n  deleteCard = async () => {\n    const { listId, card, dispatch } = this.props;\n\n    dispatch({\n      type: \"DELETE_CARD\",\n      payload: { cardId: card._id, listId }\n    });\n  };\n  //store the color\n  constructor(props){\n    super(props);\n    this.state = {\n      btn:''\n    }\n  }\n\n //change color function \nchangeColor = async (Event) =>{\n  this.setState({btn:Event});\n  const {card,dispatch} = this.props;\n  dispatch( {\n    \n    type: \"CHANGE_CARD_COLOR\",\n    payload: { cardId: card._id, color: Event }\n  });\n  \n}\n\n  render() {\n    const { card, index } = this.props;\n    const { hover, editing, btn } = this.state;\n    \n    \n    if (!editing) {\n      return (\n        <Draggable draggableId={card._id} index={index}>\n          {(provided) => (\n            <div\n              ref={provided.innerRef}\n              {...provided.draggableProps}\n              {...provided.dragHandleProps}\n              className=\"Card\"\n              onMouseEnter={this.startHover}\n              onMouseLeave={this.endHover}\n              style={{border: `2px solid ${btn}`}}\n              //style ={this.btn()}\n              \n            >\n              \n              {hover && (\n                <div className=\"Card-Icons\">\n                  <div className=\"Card-Icon\" onClick={this.startEditing}>\n                    <ion-icon name=\"create\" />\n                    \n                  </div>\n                  \n                  \n                </div>\n              )}\n              {this.changeColor}\n              {card.text}\n            </div>\n          )}\n        </Draggable>\n      );\n    } else {\n      return (\n        //Card Eidtor\n        <CardEditor\n          text={card.text}\n          onSave={this.editCard}\n          onDelete={this.deleteCard}\n          onCancel={this.endEditing}\n          //onColor\n          onColor={this.changeColor}\n        />\n      );\n    }\n  }\n}\n\n\nconst mapStateToProps = (state, ownProps) => ({\n  card: state.cardsById[ownProps.cardId]\n});\n\n\nexport default connect(mapStateToProps)(Card);\n"]},"metadata":{},"sourceType":"module"}